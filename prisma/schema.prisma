
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


enum ChampionRole{
  SUPPORT
  ADC
  MID
  JG
  TOP
}

model Champion {
  id String @id @default(cuid()) 
  name String
  imageURL String
  roles Role[] @relation("ChampionRole")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  games GameChampion[]
}

model Role {
  id String @id @default(cuid())
  role ChampionRole 
  champion Champion[] @relation("ChampionRole")
}


model Game {
  id String @id @default(cuid()) 
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  champions GameChampion[] 
  gameDuration Int
  win Boolean @default(false)
  lose Boolean @default(false)
  createdByUserId String

  defaultVersionId String?
  defaultVersion gameVersion? @relation(fields: [defaultVersionId], references: [id], onDelete: Cascade)
}

model GameChampion{
  id String @id @default(cuid())
  damage Int
  gold Int
  goldAtFiveMin  Int?
  goldAtTenMin Int?

  role ChampionRole

  championId String
  champion Champion @relation(fields: [championId], references: [id])

  gameId String
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)
  @@unique([gameId, championId])
  @@index([gameId])
}


model gameVersion {
  id String @id @default(cuid())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  games Game[]
}